{"ast":null,"code":"var _jsxFileName = \"D:\\\\port\\\\port\\\\src\\\\Addcart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Addcart = () => {\n  _s();\n  const [addcart, setAddCart] = useState([]);\n  const addCart = item => {\n    setAddCart([...addcart, item]);\n  };\n  const remove = item => {\n    const newItem = [...addCart];\n    newItem.splice(item, 1);\n    setAddCart(newItem);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-cart\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add-To-Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: addcart.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => remove(item),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"itemInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addCart(document.getElementById('itemInput').value),\n          children: \"Add to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(Addcart, \"9xuV1ocnOiA5BMktuiR/iTd6Qk0=\");\n_c = Addcart;\nexport default Addcart;\nvar _c;\n$RefreshReg$(_c, \"Addcart\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Addcart","_s","addcart","setAddCart","addCart","item","remove","newItem","splice","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","type","id","document","getElementById","value","_c","$RefreshReg$"],"sources":["D:/port/port/src/Addcart.jsx"],"sourcesContent":["import React ,{useState}from 'react'\r\n\r\nconst Addcart = () => {\r\n\r\n    const [addcart, setAddCart] = useState([]);\r\n\r\n    const addCart=(item)=>{\r\nsetAddCart([...addcart, item])\r\n    }\r\n\r\n    const remove=(item)=>{\r\n        const newItem = [...addCart];\r\n        newItem.splice(item,1);\r\n        setAddCart(newItem);\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <div className=\"shop-cart\">\r\n        <h1>Add-To-Cart</h1>\r\n        <ul>\r\n        {addcart.map((item, index) => (\r\n          <li key={index}>\r\n            {item}\r\n            <button onClick={() => remove(item)}>Remove</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n        <div className='add-item'>\r\n        <input type=\"text\" id=\"itemInput\" />\r\n        <button onClick={() => addCart(document.getElementById('itemInput').value)}>Add to Cart</button>\r\n      </div>\r\n    </div>\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Addcart"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAElB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMS,OAAO,GAAEC,IAAI,IAAG;IAC1BF,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEG,IAAI,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMC,MAAM,GAAED,IAAI,IAAG;IACjB,MAAME,OAAO,GAAG,CAAC,GAAGH,OAAO,CAAC;IAC5BG,OAAO,CAACC,MAAM,CAACH,IAAI,EAAC,CAAC,CAAC;IACtBF,UAAU,CAACI,OAAO,CAAC;EACvB,CAAC;EAEH,oBACEV,OAAA,CAAAE,SAAA;IAAAU,QAAA,eACAZ,OAAA;MAAKa,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACtBZ,OAAA;QAAAY,QAAA,EAAI;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBjB,OAAA;QAAAY,QAAA,EACCP,OAAO,CAACa,GAAG,CAAC,CAACV,IAAI,EAAEW,KAAK,kBACvBnB,OAAA;UAAAY,QAAA,GACGJ,IAAI,eACLR,OAAA;YAAQoB,OAAO,EAAEA,CAAA,KAAMX,MAAM,CAACD,IAAI,CAAE;YAAAI,QAAA,EAAC;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAF7CE,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACHjB,OAAA;QAAKa,SAAS,EAAC,UAAU;QAAAD,QAAA,gBACzBZ,OAAA;UAAOqB,IAAI,EAAC,MAAM;UAACC,EAAE,EAAC;QAAW;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACpCjB,OAAA;UAAQoB,OAAO,EAAEA,CAAA,KAAMb,OAAO,CAACgB,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,KAAK,CAAE;UAAAb,QAAA,EAAC;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7F,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBAEJ,CAAC;AAEP,CAAC;AAAAb,EAAA,CAlCKD,OAAO;AAAAuB,EAAA,GAAPvB,OAAO;AAoCb,eAAeA,OAAO;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}