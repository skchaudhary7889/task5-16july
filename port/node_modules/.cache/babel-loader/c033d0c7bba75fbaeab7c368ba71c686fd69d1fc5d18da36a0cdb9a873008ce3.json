{"ast":null,"code":"var _jsxFileName = \"D:\\\\port\\\\port\\\\src\\\\Components\\\\CartContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\n\n//create cartcontext using createcontext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\n// define a CartProvider component that wraps its children with the context provider. The CartProvider component holds the state of the cart items and provides the addToCart and removeFromCart functions to modify the cart state.\nexport const CartProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [cartItems, setCartItems] = useState([]);\n  const addToCart = item => {\n    setCartItems([...cartItems, item]);\n  };\n  const removeFromCart = itemId => {\n    const updatedCart = cartItems.filter(item => item.id !== itemId);\n    setCartItems(updatedCart);\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      removeFromCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"jeyeRm/hZ/3zvXF4PAYTLSHDNRs=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","CartContext","CartProvider","_ref","_s","children","cartItems","setCartItems","addToCart","item","removeFromCart","itemId","updatedCart","filter","id","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/port/port/src/Components/CartContext.jsx"],"sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\n//create cartcontext using createcontext\r\nexport const CartContext = createContext();\r\n// define a CartProvider component that wraps its children with the context provider. The CartProvider component holds the state of the cart items and provides the addToCart and removeFromCart functions to modify the cart state.\r\nexport const CartProvider = ({ children }) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n\r\n  const addToCart = (item) => {\r\n    setCartItems([...cartItems, item]);\r\n  };\r\n\r\n  const removeFromCart = (itemId) => {\r\n    const updatedCart = cartItems.filter((item) => item.id !== itemId);\r\n    setCartItems(updatedCart);\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cartItems, addToCart, removeFromCart }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;;AAEtD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;AAC1C;AACA,OAAO,MAAMK,YAAY,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACvC,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMU,SAAS,GAAIC,IAAI,IAAK;IAC1BF,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEG,IAAI,CAAC,CAAC;EACpC,CAAC;EAED,MAAMC,cAAc,GAAIC,MAAM,IAAK;IACjC,MAAMC,WAAW,GAAGN,SAAS,CAACO,MAAM,CAAEJ,IAAI,IAAKA,IAAI,CAACK,EAAE,KAAKH,MAAM,CAAC;IAClEJ,YAAY,CAACK,WAAW,CAAC;EAC3B,CAAC;EAED,oBACEZ,OAAA,CAACC,WAAW,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEV,SAAS;MAAEE,SAAS;MAAEE;IAAe,CAAE;IAAAL,QAAA,EACnEA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAChB,EAAA,CAjBWF,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}