{"ast":null,"code":"var _jsxFileName = \"D:\\\\port\\\\port\\\\src\\\\Components\\\\Todo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport Task from './Task';\nimport CreateTask from './CreateTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Todo = () => {\n  _s();\n  const [done, setDone] = useState(0);\n  const [task, setTask] = useState([{\n    title: \"Grab some Pizza\",\n    completed: true\n  }, {\n    title: \"Do your workout\",\n    completed: true\n  }, {\n    title: \"Hangout with friends\",\n    completed: false\n  }]);\n  useEffect(() => {\n    setDone(task.filter(task => task.completed).length);\n  });\n\n  // add new task \n  const addTask = title => {\n    const newTasks = [...task, {\n      title,\n      completed: false\n    }];\n    setTask(newTasks);\n  };\n  const completeTask = index => {\n    const newTasks = [...task];\n    newTasks[index].completed = true;\n    setTask(newTasks);\n  };\n  const removeTask = index => {\n    const newTasks = [...task];\n    newTasks.splice(index, 1);\n    setTask(newTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"To-D\", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"orange\"\n          },\n          children: \"o-List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Total-Task-Done:(\", done, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total-Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: task.map((task, index) => /*#__PURE__*/_jsxDEV(Task, {\n          task: task,\n          index: index,\n          completeTask: completeTask,\n          removeTask: removeTask\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"creatTask\",\n        children: /*#__PURE__*/_jsxDEV(CreateTask, {\n          addTask: addTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n_s(Todo, \"IctyaJTYSfpV8ksCUmsCYkHrK3U=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useEffect","useState","Task","CreateTask","jsxDEV","_jsxDEV","Fragment","_Fragment","Todo","_s","done","setDone","task","setTask","title","completed","filter","length","addTask","newTasks","completeTask","index","removeTask","splice","children","className","style","color","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["D:/port/port/src/Components/Todo.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport Task from './Task'\r\nimport CreateTask from './CreateTask'\r\n\r\nconst Todo = () => {\r\n\r\n\r\n  const [done, setDone] = useState(0)\r\n  const [task, setTask] = useState([\r\n    {\r\n      title: \"Grab some Pizza\",\r\n      completed: true\r\n  },\r\n  {\r\n      title: \"Do your workout\",\r\n      completed: true\r\n  },\r\n  {\r\n      title: \"Hangout with friends\",\r\n      completed: false\r\n  }\r\n  ]);\r\n\r\n  useEffect(()=>{\r\n    \r\n    setDone(task.filter(task => task.completed).length)\r\n  })\r\n\r\n// add new task \r\n  const addTask = title => {\r\n    const newTasks = [...task, { title, completed: false }];\r\n    setTask(newTasks);\r\n};\r\n\r\nconst completeTask = index => {\r\n  const newTasks = [...task];\r\n  newTasks[index].completed = true;\r\n  setTask(newTasks);\r\n};\r\n\r\nconst removeTask = index => {\r\n  const newTasks = [...task];\r\n  newTasks.splice(index, 1);\r\n  setTask(newTasks);\r\n};\r\n\r\n  return (\r\n   <>\r\n   <div className='todo-list'>\r\n    <h1 >To-D<span style={{color:\"orange\"}}>o-List</span></h1>\r\n    <span>Total-Task-Done:({done})</span>\r\n    <span>Total-Task</span>\r\n   \r\n\r\n    <div className=\"card\">\r\n      {task.map((task,index)=>(\r\n        <Task task={task}\r\n        index={index}\r\n        completeTask={completeTask}\r\n        removeTask={removeTask}\r\n        key={index}/>\r\n      ))}\r\n\r\n    </div>\r\n    <div className=\"creatTask\">\r\n      <CreateTask addTask={addTask}/>\r\n    </div>\r\n   </div>\r\n   </>\r\n  )\r\n}\r\n\r\nexport default Todo;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}